{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/export/index.js","webpack:///./resources/store/artboard.js","webpack:///./resources/store/images.js","webpack:///./resources/store/index.js","webpack:///./resources/store/svgs.js"],"names":["getRoot","context","scriptPath","stringByDeletingLastPathComponent","getFileContent","filePath","NSString","stringWithContentsOfFile_encoding_error","nil","getSavePath","document","fileURL","path","fileName","displayName","stringByDeletingPathExtension","savePanel","NSSavePanel","setTitle","setNameFieldLabel","setPrompt","setCanCreateDirectories","setNameFieldStringValue","runModal","NSOKButton","URL","writeFile","options","content","stringWithString","savePathName","NSFileManager","defaultManager","createDirectoryAtPath_withIntermediateDirectories_attributes_error","push","join","writeToFile_atomically_encoding_error","removeIrrelevantLayers","layers","length","forEach","layer","type","remove","detatchSymbols","detach","recursively","removeHiddenLayers","hidden","transparent","style","opacity","hiddenOrTransparent","maskGroupToImageLayer","maskGroup","sketch","buffer","formats","output","imageLayer","Image","name","image","frame","masksToImages","hasClippingMask","sketchObject","hasParentGroup","parent","parentIndex","index","parentsParent","splice","flattenGroups","ungroup","roundFrameDimensions","x","Math","round","y","width","height","getArtboard","selectedArtboard","artboard","duplicate","createBase64Image","nsdata","id","newImageBase64","base64EncodedStringWithOptions","newImage","src","base64ImageBatch","images","map","layerToBase64","bufferImg","gradientToBase64","activeGradients","fills","filter","fill","enabled","fillType","topGradient","borders","shadows","innerShadows","transform","rotation","flippedHorizontally","flippedVertically","points","point","cornerRadius","getBase64Gradients","hasActiveGradient","some","layerDuplicate","base64Gradient","getLayerImages","getFillImages","pattern","getImages","layerImages","fillImages","base64LayerImages","base64FillImages","base64Gradients","getStore","svgs","getSVGs","notes","getOddShapePathSVGs","hasOpenPath","closed","notRectangle","shapeType","notOval","isOddShape","NSTemporaryDirectory","svgContent","svg","getShapeSVGs","shapeSvgs","oddShapePathSvgs"],"mappings":"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","file":"resources_store_index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./resources/store/index.js\");\n","export const getRoot = (context) => {\n    return context.scriptPath.stringByDeletingLastPathComponent().stringByDeletingLastPathComponent().stringByDeletingLastPathComponent();\n};\nexport const getFileContent = (filePath) => {\n    //@ts-ignore\n    return NSString.stringWithContentsOfFile_encoding_error(filePath, 4, nil);\n};\nexport const getSavePath = (context) => {\n    let filePath = context.document.fileURL() ? context.document.fileURL().path().stringByDeletingLastPathComponent() : \"~\";\n    let fileName = context.document.displayName().stringByDeletingPathExtension();\n    //@ts-ignore\n    let savePanel = NSSavePanel.savePanel();\n    savePanel.setTitle(\"Export spec\");\n    savePanel.setNameFieldLabel(\"Export to:\");\n    savePanel.setPrompt(\"Export\");\n    savePanel.setCanCreateDirectories(true);\n    savePanel.setNameFieldStringValue(fileName);\n    //@ts-ignore\n    if (savePanel.runModal() != NSOKButton) {\n        return false;\n    }\n    return savePanel.URL().path();\n};\n//@ts-ignore\nexport const writeFile = (options) => {\n    //@ts-ignore\n    let content = NSString.stringWithString(options.content);\n    let savePathName = [];\n    //@ts-ignore\n    NSFileManager.defaultManager().createDirectoryAtPath_withIntermediateDirectories_attributes_error(options.path, true, nil, nil);\n    savePathName.push(options.path, \"/\", options.fileName);\n    savePathName = savePathName.join(\"\");\n    content.writeToFile_atomically_encoding_error(savePathName, false, 4, null);\n};\n","const removeIrrelevantLayers = (layers) => {\n    if (layers.length > 0) {\n        layers.forEach((layer) => {\n            if (layer.type === 'Group') {\n                removeIrrelevantLayers(layer.layers);\n            }\n            else if (layer.type === 'HotSpot' || layer.type === 'Slice' || layer.type === 'Artboard') {\n                layer.remove();\n            }\n        });\n    }\n};\nconst detatchSymbols = (layers) => {\n    if (layers.length > 0) {\n        layers.forEach((layer) => {\n            if (layer.type === 'Group') {\n                detatchSymbols(layer.layers);\n            }\n            else if (layer.type === 'SymbolInstance') {\n                layer.detach({\n                    recursively: true\n                });\n            }\n        });\n    }\n};\nconst removeHiddenLayers = (layers) => {\n    if (layers.length > 0) {\n        layers.forEach((layer) => {\n            const hidden = layer.hidden;\n            const transparent = layer.style.opacity === 0;\n            const hiddenOrTransparent = hidden || transparent;\n            if (layer.type === 'Group' && !hiddenOrTransparent) {\n                removeHiddenLayers(layer.layers);\n            }\n            else if (hiddenOrTransparent) {\n                layer.remove();\n            }\n        });\n    }\n};\nconst maskGroupToImageLayer = (maskGroup, sketch) => {\n    // create image buffer from layer\n    const buffer = sketch.export(maskGroup, {\n        formats: 'png',\n        output: false,\n        ['save-for-web']: true\n    });\n    // create image layer from buffer data\n    const imageLayer = new sketch.Image({\n        name: 'masked-group',\n        image: buffer\n    });\n    // set image layer frame to match mask group frame\n    imageLayer.frame = maskGroup.frame;\n    // return image layer\n    return imageLayer;\n};\nconst masksToImages = (layers, sketch) => {\n    if (layers.length > 0) {\n        layers.forEach((layer) => {\n            const hasClippingMask = layer.sketchObject.hasClippingMask();\n            const hasParentGroup = layer.parent && layer.parent.type === 'Group';\n            if (layer.type === 'Group' && !hasClippingMask) {\n                masksToImages(layer.layers, sketch);\n            }\n            else if (hasClippingMask && hasParentGroup) {\n                // @ts-ignore\n                const parent = layer.parent;\n                const parentIndex = parent.index;\n                const parentsParent = parent.parent;\n                const imageLayer = maskGroupToImageLayer(parent, sketch);\n                // splice in new image, splice out old mask group\n                parentsParent.layers.splice(parentIndex, 1, imageLayer);\n            }\n        });\n    }\n};\nconst flattenGroups = (layers) => {\n    if (layers.length > 0) {\n        layers.forEach((layer) => {\n            if (layer.type === \"Group\") {\n                layer.sketchObject.ungroup();\n                flattenGroups(layer.layers);\n            }\n        });\n    }\n};\nconst roundFrameDimensions = (layers) => {\n    layers.forEach((layer) => {\n        layer.frame.x = Math.round(layer.frame.x);\n        layer.frame.y = Math.round(layer.frame.y);\n        layer.frame.width = Math.round(layer.frame.width);\n        layer.frame.height = Math.round(layer.frame.height);\n    });\n};\nconst getArtboard = (selectedArtboard, sketch) => {\n    // duplicate artboard\n    let artboard = selectedArtboard.duplicate();\n    // reset duplicated artboard position\n    artboard.frame.x = 0;\n    artboard.frame.y = 0;\n    // removes hotspots, slices, and artboards\n    removeIrrelevantLayers(artboard.layers);\n    // detach all symbols from artboard, returns layer groups\n    detatchSymbols(artboard.layers);\n    // remove hidden layers\n    removeHiddenLayers(artboard.layers);\n    // turn masks into image layers\n    masksToImages(artboard.layers, sketch);\n    // flatten all groups\n    // flattenGroups(artboard.layers);\n    // round layer frame dimensions\n    roundFrameDimensions(artboard.layers);\n    // return final artboard\n    return artboard;\n};\nexport default getArtboard;\n","const createBase64Image = (nsdata, id) => {\n    let newImageBase64 = nsdata.base64EncodedStringWithOptions(0);\n    let newImage = 'data:image/png;base64,' + newImageBase64;\n    return {\n        id: id,\n        src: newImage\n    };\n};\nconst base64ImageBatch = (images) => {\n    return images.map((image) => {\n        return createBase64Image(image.nsdata, image.id);\n    });\n};\nconst layerToBase64 = (layer, id, sketch) => {\n    // create image buffer from layer\n    const buffer = sketch.export(layer, {\n        formats: 'png',\n        output: false,\n        ['save-for-web']: true\n    });\n    // create image from buffer data\n    const bufferImg = new sketch.Image({\n        image: buffer\n    });\n    // return base64 image\n    return createBase64Image(bufferImg.image.nsdata, id);\n};\nconst gradientToBase64 = (layer, id, sketch) => {\n    // get enabled gradients\n    const activeGradients = layer.style.fills.filter((fill) => {\n        return fill.enabled && fill.fillType === 'Gradient';\n    });\n    // get top gradient fill\n    const topGradient = activeGradients[activeGradients.length - 1];\n    // only keep layer gradient styles\n    layer.style.fills = [topGradient];\n    layer.style.borders = [];\n    layer.style.shadows = [];\n    layer.style.innerShadows = [];\n    layer.transform.rotation = 0;\n    layer.transform.flippedHorizontally = false;\n    layer.transform.flippedVertically = false;\n    if (layer.type === 'ShapePath') {\n        layer.points.forEach((point) => point.cornerRadius = 0);\n    }\n    // return base64 image\n    return layerToBase64(layer, id, sketch);\n};\nconst getBase64Gradients = (layers, sketch, images = []) => {\n    if (layers.length > 0) {\n        layers.forEach((layer) => {\n            if (layer.type === 'Group') {\n                getBase64Gradients(layer.layers, sketch, images);\n            }\n            else if (layer.type === 'Shape' || layer.type === 'ShapePath') {\n                // check if fills contain any enabled gradients\n                const hasActiveGradient = layer.style.fills.some((fill) => {\n                    return fill.fillType === 'Gradient' && fill.enabled;\n                });\n                // generate gradient base64\n                if (hasActiveGradient) {\n                    // duplicate layer\n                    // all styles but the gradient will be removed\n                    const layerDuplicate = layer.duplicate();\n                    // create base64 from duplicate layer\n                    const base64Gradient = gradientToBase64(layerDuplicate, layer.id, sketch);\n                    // push base64 gradient to images\n                    images.push(base64Gradient);\n                    // remove duplicate\n                    layerDuplicate.remove();\n                }\n            }\n        });\n    }\n    return images;\n};\nconst getLayerImages = (layers, images = []) => {\n    if (layers.length > 0) {\n        layers.forEach((layer) => {\n            if (layer.type === 'Group') {\n                getLayerImages(layer.layers, images);\n            }\n            else if (layer.type === 'Image') {\n                images.push(layer.image);\n            }\n        });\n    }\n    return images;\n};\nconst getFillImages = (layers, images = []) => {\n    if (layers.length > 0) {\n        layers.forEach((layer) => {\n            if (layer.type === 'Group') {\n                getFillImages(layer.layers, images);\n            }\n            else if (layer.type === 'Shape' || layer.type === 'ShapePath') {\n                layer.style.fills.forEach((fill) => {\n                    if (fill.pattern.image !== null && fill.enabled) {\n                        images.push(fill.pattern.image);\n                    }\n                });\n            }\n        });\n    }\n    return images;\n};\nconst getImages = (layers, sketch) => {\n    // get layers to turn into base64\n    const layerImages = getLayerImages(layers);\n    const fillImages = getFillImages(layers);\n    // generate base64 images from layers\n    const base64LayerImages = base64ImageBatch(layerImages);\n    const base64FillImages = base64ImageBatch(fillImages);\n    const base64Gradients = getBase64Gradients(layers, sketch);\n    // return final base64 image store\n    return [...base64LayerImages, ...base64FillImages, ...base64Gradients];\n};\nexport default getImages;\n","import getArtboard from './artboard';\nimport getImages from './images';\nimport getSVGs from './svgs';\nconst getStore = (selectedArtboard, sketch) => {\n    // get final store items\n    const artboard = getArtboard(selectedArtboard, sketch);\n    const images = getImages(artboard.layers, sketch);\n    const svgs = getSVGs(artboard.layers, sketch);\n    const notes = {};\n    // remove duplicate artboard\n    artboard.remove();\n    // run callback\n    return {\n        artboard,\n        images,\n        svgs,\n        notes\n    };\n};\nexport default getStore;\n","import { getFileContent } from '../export';\nconst getOddShapePathSVGs = (layers, sketch, svgs = []) => {\n    if (layers.length > 0) {\n        layers.forEach((layer) => {\n            if (layer.type === 'Group') {\n                getOddShapePathSVGs(layer.layers, sketch, svgs);\n            }\n            else if (layer.type === 'ShapePath') {\n                const hasOpenPath = !layer.closed;\n                const notRectangle = layer.shapeType !== 'Rectangle';\n                const notOval = layer.shapeType !== 'Oval';\n                const isOddShape = notRectangle && notOval;\n                if (hasOpenPath || isOddShape) {\n                    // create svg in temp directory\n                    sketch.export(layer, {\n                        formats: 'svg',\n                        // @ts-ignore\n                        output: NSTemporaryDirectory(),\n                        ['use-id-for-name']: true,\n                        compact: true,\n                        overwriting: true\n                    });\n                    // get new svg path\n                    // @ts-ignore\n                    const filePath = `${NSTemporaryDirectory()}${layer.id}.svg`;\n                    // read contents of svg\n                    const svgContent = getFileContent(filePath);\n                    // set contents in svgs\n                    svgs.push({\n                        id: layer.id,\n                        svg: `${svgContent}`\n                    });\n                }\n            }\n        });\n    }\n    return svgs;\n};\nconst getShapeSVGs = (layers, sketch, svgs = []) => {\n    if (layers.length > 0) {\n        layers.forEach((layer) => {\n            if (layer.type === 'Group') {\n                getShapeSVGs(layer.layers, sketch, svgs);\n            }\n            else if (layer.type === 'Shape') {\n                // create svg in temp directory\n                sketch.export(layer, {\n                    formats: 'svg',\n                    // @ts-ignore\n                    output: NSTemporaryDirectory(),\n                    ['use-id-for-name']: true,\n                    compact: true,\n                    overwriting: true\n                });\n                // get new svg path\n                // @ts-ignore\n                const filePath = `${NSTemporaryDirectory()}${layer.id}.svg`;\n                // read contents of svg\n                const svgContent = getFileContent(filePath);\n                // set contents in svgs\n                svgs.push({\n                    id: layer.id,\n                    svg: `${svgContent}`\n                });\n            }\n        });\n    }\n    return svgs;\n};\nconst getSVGs = (layers, sketch) => {\n    let shapeSvgs = getShapeSVGs(layers, sketch);\n    let oddShapePathSvgs = getOddShapePathSVGs(layers, sketch);\n    return [...shapeSvgs, ...oddShapePathSvgs];\n};\nexport default getSVGs;\n"],"sourceRoot":""}