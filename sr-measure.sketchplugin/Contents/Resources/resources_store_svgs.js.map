{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/export/index.js","webpack:///./resources/store/svgs.js"],"names":["getRoot","context","scriptPath","stringByDeletingLastPathComponent","getFileContent","filePath","NSString","stringWithContentsOfFile_encoding_error","nil","getSavePath","document","fileURL","path","fileName","displayName","stringByDeletingPathExtension","savePanel","NSSavePanel","setTitle","setNameFieldLabel","setPrompt","setCanCreateDirectories","setNameFieldStringValue","runModal","NSOKButton","URL","writeFile","options","content","stringWithString","savePathName","NSFileManager","defaultManager","createDirectoryAtPath_withIntermediateDirectories_attributes_error","push","join","writeToFile_atomically_encoding_error","getOddShapePathSVGs","layers","sketch","svgs","forEach","layer","type","hasOpenPath","closed","notRectangle","shapeType","notOval","isOddShape","formats","output","NSTemporaryDirectory","id","svgContent","svg","getShapeSVGs","getSVGs","shapeSvgs","oddShapePathSvgs"],"mappings":"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","file":"resources_store_svgs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./resources/store/svgs.js\");\n","export const getRoot = (context) => {\n    return context.scriptPath.stringByDeletingLastPathComponent().stringByDeletingLastPathComponent().stringByDeletingLastPathComponent();\n};\nexport const getFileContent = (filePath) => {\n    //@ts-ignore\n    return NSString.stringWithContentsOfFile_encoding_error(filePath, 4, nil);\n};\nexport const getSavePath = (context) => {\n    let filePath = context.document.fileURL() ? context.document.fileURL().path().stringByDeletingLastPathComponent() : \"~\";\n    let fileName = context.document.displayName().stringByDeletingPathExtension();\n    //@ts-ignore\n    let savePanel = NSSavePanel.savePanel();\n    savePanel.setTitle(\"Export spec\");\n    savePanel.setNameFieldLabel(\"Export to:\");\n    savePanel.setPrompt(\"Export\");\n    savePanel.setCanCreateDirectories(true);\n    savePanel.setNameFieldStringValue(fileName);\n    //@ts-ignore\n    if (savePanel.runModal() != NSOKButton) {\n        return false;\n    }\n    return savePanel.URL().path();\n};\n//@ts-ignore\nexport const writeFile = (options) => {\n    //@ts-ignore\n    let content = NSString.stringWithString(options.content);\n    let savePathName = [];\n    //@ts-ignore\n    NSFileManager.defaultManager().createDirectoryAtPath_withIntermediateDirectories_attributes_error(options.path, true, nil, nil);\n    savePathName.push(options.path, \"/\", options.fileName);\n    savePathName = savePathName.join(\"\");\n    content.writeToFile_atomically_encoding_error(savePathName, false, 4, null);\n};\n","import { getFileContent } from '../export';\nconst getOddShapePathSVGs = (layers, sketch, svgs = []) => {\n    layers.forEach((layer) => {\n        if (layer.type === 'ShapePath') {\n            const hasOpenPath = !layer.closed;\n            const notRectangle = layer.shapeType !== 'Rectangle';\n            const notOval = layer.shapeType !== 'Oval';\n            const isOddShape = notRectangle && notOval;\n            if (hasOpenPath || isOddShape) {\n                // create svg in temp directory\n                sketch.export(layer, {\n                    formats: 'svg',\n                    // @ts-ignore\n                    output: NSTemporaryDirectory(),\n                    ['use-id-for-name']: true,\n                    compact: true,\n                    overwriting: true\n                });\n                // get new svg path\n                // @ts-ignore\n                const filePath = `${NSTemporaryDirectory()}${layer.id}.svg`;\n                // read contents of svg\n                const svgContent = getFileContent(filePath);\n                // set contents in svgs\n                svgs.push({\n                    id: layer.id,\n                    svg: `${svgContent}`\n                });\n            }\n        }\n    });\n    return svgs;\n};\nconst getShapeSVGs = (layers, sketch, svgs = []) => {\n    layers.forEach((layer) => {\n        if (layer.type === 'Shape') {\n            // create svg in temp directory\n            sketch.export(layer, {\n                formats: 'svg',\n                // @ts-ignore\n                output: NSTemporaryDirectory(),\n                ['use-id-for-name']: true,\n                compact: true,\n                overwriting: true\n            });\n            // get new svg path\n            // @ts-ignore\n            const filePath = `${NSTemporaryDirectory()}${layer.id}.svg`;\n            // read contents of svg\n            const svgContent = getFileContent(filePath);\n            // set contents in svgs\n            svgs.push({\n                id: layer.id,\n                svg: `${svgContent}`\n            });\n        }\n    });\n    return svgs;\n};\nconst getSVGs = (layers, sketch) => {\n    let shapeSvgs = getShapeSVGs(layers, sketch);\n    let oddShapePathSvgs = getOddShapePathSVGs(layers, sketch);\n    return [...shapeSvgs, ...oddShapePathSvgs];\n};\nexport default getSVGs;\n"],"sourceRoot":""}