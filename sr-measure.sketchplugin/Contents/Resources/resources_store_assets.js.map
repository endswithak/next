{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/store/assets.js"],"names":["createSvgFromLayer","page","layer","sketch","id","borderSize","activeBorders","style","borders","filter","border","enabled","forEach","thickness","layerDuplicate","duplicate","parent","opacity","transform","rotation","flippedHorizontally","flippedVertically","formats","output","NSTemporaryDirectory","frame","width","Math","round","height","x","y","remove","src","createShapeFromLayer","name","shapeReplacement","Shape","createShapeFromGroup","prefix","newName","substr","length","trim","createImageLayerImage","scales","image","createGradientFillImage","activeGradients","fills","fill","fillType","topGradient","gradientImage","ShapePath","createImageFillImage","nsimage","size","fillImage","Image","processLayerFills","images","fillImages","pattern","find","push","isComplexShapePath","hasOpenPath","closed","notRectangle","shapeType","notOval","isOddShape","hasDashPattern","borderOptions","dashPattern","processShapePath","callback","isComplex","shapePathFillImages","svg","layers","splice","index","processShape","shapeFillImages","processImage","processGroup","startsWith","processText","fonts","fontFamily","availableFamilies","NSFontManager","sharedFontManager","availableFontFamilies","availableFamiliesArray","Array","from","item","String","fontAvailable","includes","processLayer","svgs","type","shapeImages","shapeSvg","shapePathImages","shapePathSvg","font","groupSvg","processLayers","newAssets","createArtboardImage","artboard","buffer","bufferImg","base64","nsdata","base64EncodedStringWithOptions","getAssets","artboardAssets","artboardImage","Object","assign"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAsBC,EAAtB,EAA6B;AAAA;;AACpD,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAMC,aAAa,GAAGJ,KAAK,CAACK,KAAN,CAAYC,OAAZ,CAAoBC,MAApB,CAA2B,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,OAAnB;AAAA,GAA3B,CAAtB;;AACA,MAAIL,aAAJ,EAAmB;AACfA,iBAAa,CAACM,OAAd,CAAsB,UAACF,MAAD,EAAY;AAC9B,UAAIA,MAAM,CAACG,SAAP,GAAmBR,UAAvB,EAAmC;AAC/BA,kBAAU,GAAGK,MAAM,CAACG,SAApB;AACH;AACJ,KAJD;AAKH,GATmD,CAUpD;;;AACA,MAAMC,cAAc,GAAGZ,KAAK,CAACa,SAAN,EAAvB,CAXoD,CAYpD;;AACAD,gBAAc,CAACE,MAAf,GAAwBf,IAAxB,CAboD,CAcpD;;AACAa,gBAAc,CAACP,KAAf,CAAqBU,OAArB,GAA+B,CAA/B;AACAH,gBAAc,CAACI,SAAf,CAAyBC,QAAzB,GAAoC,CAApC;AACAL,gBAAc,CAACI,SAAf,CAAyBE,mBAAzB,GAA+C,KAA/C;AACAN,gBAAc,CAACI,SAAf,CAAyBG,iBAAzB,GAA6C,KAA7C,CAlBoD,CAmBpD;;AACAlB,QAAM,UAAN,CAAcW,cAAd;AACIQ,WAAO,EAAE,KADb;AAEI;AACAC,UAAM,EAAEC,oBAAoB;AAHhC,qCAIK,iBAJL,EAIyB,IAJzB,kDAKiB,IALjB,oBApBoD,CA2BpD;;AACAtB,OAAK,CAACuB,KAAN,CAAYC,KAAZ,GAAoBC,IAAI,CAACC,KAAL,CAAW1B,KAAK,CAACuB,KAAN,CAAYC,KAAZ,GAAqBrB,UAAU,GAAG,GAA7C,CAApB;AACAH,OAAK,CAACuB,KAAN,CAAYI,MAAZ,GAAqBF,IAAI,CAACC,KAAL,CAAW1B,KAAK,CAACuB,KAAN,CAAYI,MAAZ,GAAsBxB,UAAU,GAAG,GAA9C,CAArB;AACAH,OAAK,CAACuB,KAAN,CAAYK,CAAZ,GAAgBH,IAAI,CAACC,KAAL,CAAW1B,KAAK,CAACuB,KAAN,CAAYK,CAAZ,GAAkBzB,UAAU,GAAG,GAAd,GAAqB,CAAjD,CAAhB;AACAH,OAAK,CAACuB,KAAN,CAAYM,CAAZ,GAAgBJ,IAAI,CAACC,KAAL,CAAW1B,KAAK,CAACuB,KAAN,CAAYM,CAAZ,GAAkB1B,UAAU,GAAG,GAAd,GAAqB,CAAjD,CAAhB,CA/BoD,CAgCpD;;AACAS,gBAAc,CAACkB,MAAf,GAjCoD,CAkCpD;;AACA,SAAO;AACH5B,MAAE,EAAEA,EAAE,GAAGA,EAAH,GAAQF,KAAK,CAACE,EADjB;AAEH;AACA6B,OAAG,YAAKT,oBAAoB,EAAzB,SAA8BV,cAAc,CAACV,EAA7C;AAHA,GAAP;AAKH,CAxCD;;AAyCA,IAAM8B,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAChC,KAAD,EAAQC,MAAR,EAAgBgC,IAAhB,EAAyB;AAClD;AACA,MAAMC,gBAAgB,GAAG,IAAIjC,MAAM,CAACkC,KAAX,CAAiB;AACtCF,QAAI,EAAEA,IAAI,GAAGA,IAAH,GAAUjC,KAAK,CAACiC,IADY;AAEtCV,SAAK,EAAEvB,KAAK,CAACuB,KAFyB;AAGtClB,SAAK,EAAEL,KAAK,CAACK,KAHyB;AAItCW,aAAS,EAAE;AACPC,cAAQ,EAAEjB,KAAK,CAACgB,SAAN,CAAgBC,QADnB;AAEPC,yBAAmB,EAAElB,KAAK,CAACgB,SAAN,CAAgBE,mBAF9B;AAGPC,uBAAiB,EAAEnB,KAAK,CAACgB,SAAN,CAAgBG;AAH5B;AAJ2B,GAAjB,CAAzB,CAFkD,CAYlD;;AACA,SAAOe,gBAAP;AACH,CAdD;;AAeA,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACpC,KAAD,EAAQC,MAAR,EAAgBoC,MAAhB,EAA2B;AACpD;AACA,MAAMC,OAAO,GAAGtC,KAAK,CAACiC,IAAN,CAAWM,MAAX,CAAkBF,MAAM,CAACG,MAAzB,EAAiCxC,KAAK,CAACiC,IAAN,CAAWO,MAAX,GAAoBH,MAAM,CAACG,MAA5D,EAAoEC,IAApE,EAAhB,CAFoD,CAGpD;;AACA,MAAMP,gBAAgB,GAAGF,oBAAoB,CAAChC,KAAD,EAAQC,MAAR,EAAgBqC,OAAhB,CAA7C,CAJoD,CAKpD;;AACA,SAAOJ,gBAAP;AACH,CAPD;;AAQA,IAAMQ,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAC3C,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAyB;AAAA;;AACnD,MAAMW,cAAc,GAAGZ,KAAK,CAACa,SAAN,EAAvB,CADmD,CAEnD;;AACAD,gBAAc,CAACE,MAAf,GAAwBf,IAAxB,CAHmD,CAInD;;AACAE,QAAM,UAAN,CAAcW,cAAd;AACI+B,UAAM,EAAE,MADZ;AAEIvB,WAAO,EAAE,KAFb;AAGI;AACAC,UAAM,EAAEC,oBAAoB;AAJhC,sCAKK,iBALL,EAKyB,IALzB,oCAMK,cANL,EAMsB,IANtB,mDAOiB,IAPjB,qBALmD,CAcnD;;AACAV,gBAAc,CAACkB,MAAf,GAfmD,CAgBnD;;AACA,SAAO;AACH5B,MAAE,EAAEF,KAAK,CAAC4C,KAAN,CAAY1C,EADb;AAEH6B,OAAG,oDAEYT,oBAAoB,EAFhC,SAEqCV,cAAc,CAACV,EAFpD,kDAIYoB,oBAAoB,EAJhC,SAIqCV,cAAc,CAACV,EAJpD;AAFA,GAAP;AASH,CA1BD;;AA2BA,IAAM2C,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAC9C,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAyB;AAAA;;AACrD;AACA,MAAM6C,eAAe,GAAG9C,KAAK,CAACK,KAAN,CAAY0C,KAAZ,CAAkBxC,MAAlB,CAAyB,UAACyC,IAAD,EAAU;AACvD,WAAOA,IAAI,CAACvC,OAAL,IAAgBuC,IAAI,CAACC,QAAL,KAAkB,UAAzC;AACH,GAFuB,CAAxB,CAFqD,CAKrD;;AACA,MAAMC,WAAW,GAAGJ,eAAe,CAACA,eAAe,CAACN,MAAhB,GAAyB,CAA1B,CAAnC,CANqD,CAOrD;;AACA,MAAMW,aAAa,GAAG,IAAIlD,MAAM,CAACmD,SAAX,CAAqB;AACvCtC,UAAM,EAAEf,IAD+B;AAEvCwB,SAAK,EAAEvB,KAAK,CAACuB,KAF0B;AAGvClB,SAAK,EAAE;AACH0C,WAAK,EAAE,CAACG,WAAD,CADJ;AAEH5C,aAAO,EAAE;AAFN;AAHgC,GAArB,CAAtB,CARqD,CAgBrD;;AACAL,QAAM,UAAN,CAAckD,aAAd;AACIR,UAAM,EAAE,MADZ;AAEIvB,WAAO,EAAE,KAFb;AAGI;AACAC,UAAM,EAAEC,oBAAoB;AAJhC,sCAKK,iBALL,EAKyB,IALzB,oCAMK,cANL,EAMsB,IANtB,mDAOiB,IAPjB,qBAjBqD,CA0BrD;;AACA6B,eAAa,CAACrB,MAAd,GA3BqD,CA4BrD;;AACA,SAAO;AACH5B,MAAE,EAAEF,KAAK,CAACE,EADP;AAEH6B,OAAG,sDAEYT,oBAAoB,EAFhC,SAEqC6B,aAAa,CAACjD,EAFnD,mDAIYoB,oBAAoB,EAJhC,SAIqC6B,aAAa,CAACjD,EAJnD;AAFA,GAAP;AASH,CAtCD;;AAuCA,IAAMmD,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACtD,IAAD,EAAO6C,KAAP,EAAc3C,MAAd,EAAyB;AAAA;;AAClD;AACA,MAAMuB,KAAK,GAAGoB,KAAK,CAACU,OAAN,CAAcC,IAAd,GAAqB/B,KAAnC;AACA,MAAMG,MAAM,GAAGiB,KAAK,CAACU,OAAN,CAAcC,IAAd,GAAqB5B,MAApC,CAHkD,CAIlD;;AACA,MAAM6B,SAAS,GAAG,IAAIvD,MAAM,CAACwD,KAAX,CAAiB;AAC/Bb,SAAK,EAAEA,KADwB;AAE/B9B,UAAM,EAAEf,IAFuB;AAG/BwB,SAAK,EAAE;AAAEC,WAAK,EAALA,KAAF;AAASG,YAAM,EAANA,MAAT;AAAiBC,OAAC,EAAE,CAApB;AAAuBC,OAAC,EAAE;AAA1B;AAHwB,GAAjB,CAAlB,CALkD,CAUlD;;AACA5B,QAAM,UAAN,CAAcuD,SAAd;AACIb,UAAM,EAAE,MADZ;AAEIvB,WAAO,EAAE,KAFb;AAGI;AACAC,UAAM,EAAEC,oBAAoB;AAJhC,sCAKK,iBALL,EAKyB,IALzB,oCAMK,cANL,EAMsB,IANtB,mDAOiB,IAPjB,qBAXkD,CAoBlD;;AACAkC,WAAS,CAAC1B,MAAV,GArBkD,CAsBlD;;AACA,SAAO;AACH5B,MAAE,EAAE0C,KAAK,CAAC1C,EADP;AAEH6B,OAAG,sDAEYT,oBAAoB,EAFhC,SAEqCkC,SAAS,CAACtD,EAF/C,mDAIYoB,oBAAoB,EAJhC,SAIqCkC,SAAS,CAACtD,EAJ/C;AAFA,GAAP;AASH,CAhCD;;AAiCA,IAAMwD,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC3D,IAAD,EAAOC,KAAP,EAAc2D,MAAd,EAAsB1D,MAAtB,EAAkD;AAAA,MAApB2D,UAAoB,uEAAP,EAAO;AACxE5D,OAAK,CAACK,KAAN,CAAY0C,KAAZ,CAAkBrC,OAAlB,CAA0B,UAACsC,IAAD,EAAU;AAChC,QAAIA,IAAI,CAACa,OAAL,CAAajB,KAAb,KAAuB,IAAvB,IAA+BI,IAAI,CAACvC,OAApC,IAA+C,CAACkD,MAAM,CAACG,IAAP,CAAY,UAAAlB,KAAK;AAAA,aAAIA,KAAK,CAAC1C,EAAN,KAAa8C,IAAI,CAACa,OAAL,CAAajB,KAAb,CAAmB1C,EAApC;AAAA,KAAjB,CAApD,EAA8G;AAC1G,UAAMsD,SAAS,GAAGH,oBAAoB,CAACtD,IAAD,EAAOiD,IAAI,CAACa,OAAL,CAAajB,KAApB,EAA2B3C,MAA3B,CAAtC;AACA2D,gBAAU,CAACG,IAAX,CAAgBP,SAAhB;AACH,KAHD,MAIK,IAAIR,IAAI,CAACC,QAAL,KAAkB,UAAlB,IAAgCD,IAAI,CAACvC,OAAzC,EAAkD;AACnD,UAAM0C,aAAa,GAAGN,uBAAuB,CAAC9C,IAAD,EAAOC,KAAP,EAAcC,MAAd,CAA7C;AACA2D,gBAAU,CAACG,IAAX,CAAgBZ,aAAhB;AACH;AACJ,GATD;AAUA,SAAOS,UAAP;AACH,CAZD;;AAaA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAChE,KAAD,EAAW;AAClC,MAAMiE,WAAW,GAAG,CAACjE,KAAK,CAACkE,MAA3B;AACA,MAAMC,YAAY,GAAGnE,KAAK,CAACoE,SAAN,KAAoB,WAAzC;AACA,MAAMC,OAAO,GAAGrE,KAAK,CAACoE,SAAN,KAAoB,MAApC;AACA,MAAME,UAAU,GAAGH,YAAY,IAAIE,OAAnC;AACA,MAAME,cAAc,GAAGvE,KAAK,CAACK,KAAN,CAAYmE,aAAZ,CAA0BC,WAA1B,CAAsCjC,MAAtC,GAA+C,CAAtE;AACA,SAAOyB,WAAW,IAAIK,UAAf,IAA6BC,cAApC;AACH,CAPD;;AAQA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC3E,IAAD,EAAOC,KAAP,EAAc2D,MAAd,EAAsB1D,MAAtB,EAA8B0E,QAA9B,EAA2C;AAChE,MAAMC,SAAS,GAAGZ,kBAAkB,CAAChE,KAAD,CAApC;AACA,MAAM6E,mBAAmB,GAAGnB,iBAAiB,CAAC3D,IAAD,EAAOC,KAAP,EAAc2D,MAAd,EAAsB1D,MAAtB,CAA7C;;AACA,MAAI2E,SAAJ,EAAe;AACX;AACA;AACA,QAAM1C,gBAAgB,GAAGF,oBAAoB,CAAChC,KAAD,EAAQC,MAAR,CAA7C;AACA,QAAM6E,GAAG,GAAGhF,kBAAkB,CAACC,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAsBiC,gBAAgB,CAAChC,EAAvC,CAA9B;AACAF,SAAK,CAACc,MAAN,CAAaiE,MAAb,CAAoBC,MAApB,CAA2BhF,KAAK,CAACiF,KAAjC,EAAwC,CAAxC,EAA2C/C,gBAA3C;AACAyC,YAAQ,CAACE,mBAAD,EAAsBC,GAAtB,CAAR;AACH,GAPD,MAQK;AACDH,YAAQ,CAACE,mBAAD,EAAsB,IAAtB,CAAR;AACH;AACJ,CAdD;;AAeA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACnF,IAAD,EAAOC,KAAP,EAAc2D,MAAd,EAAsB1D,MAAtB,EAA8B0E,QAA9B,EAA2C;AAC5D,MAAMQ,eAAe,GAAGzB,iBAAiB,CAAC3D,IAAD,EAAOC,KAAP,EAAc2D,MAAd,EAAsB1D,MAAtB,CAAzC;AACA,MAAM6E,GAAG,GAAGhF,kBAAkB,CAACC,IAAD,EAAOC,KAAP,EAAcC,MAAd,CAA9B;AACA0E,UAAQ,CAACQ,eAAD,EAAkBL,GAAlB,CAAR;AACH,CAJD;;AAKA,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACrF,IAAD,EAAOC,KAAP,EAAc2D,MAAd,EAAsB1D,MAAtB,EAA8B0E,QAA9B,EAA2C;AAC5D,MAAI,CAAChB,MAAM,CAACG,IAAP,CAAY,UAAAlB,KAAK;AAAA,WAAIA,KAAK,CAAC1C,EAAN,KAAaF,KAAK,CAAC4C,KAAN,CAAY1C,EAA7B;AAAA,GAAjB,CAAL,EAAwD;AACpD,QAAM0C,KAAK,GAAGF,qBAAqB,CAAC3C,IAAD,EAAOC,KAAP,EAAcC,MAAd,CAAnC;AACA0E,YAAQ,CAAC/B,KAAD,CAAR;AACH,GAHD,MAIK;AACD+B,YAAQ,CAAC,IAAD,CAAR;AACH;AACJ,CARD;;AASA,IAAMU,YAAY,GAAG,SAAfA,YAAe,CAACtF,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAsB0E,QAAtB,EAAmC;AACpD,MAAI3E,KAAK,CAACiC,IAAN,CAAWqD,UAAX,CAAsB,WAAtB,CAAJ,EAAwC;AACpC;AACA,QAAMpD,gBAAgB,GAAGE,oBAAoB,CAACpC,KAAD,EAAQC,MAAR,EAAgB,WAAhB,CAA7C,CAFoC,CAGpC;;AACA,QAAM6E,GAAG,GAAGhF,kBAAkB,CAACC,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAsBiC,gBAAgB,CAAChC,EAAvC,CAA9B,CAJoC,CAKpC;;AACAF,SAAK,CAACc,MAAN,CAAaiE,MAAb,CAAoBC,MAApB,CAA2BhF,KAAK,CAACiF,KAAjC,EAAwC,CAAxC,EAA2C/C,gBAA3C,EANoC,CAOpC;;AACAyC,YAAQ,CAACG,GAAD,CAAR;AACH,GATD,MAUK;AACDH,YAAQ,CAAC,IAAD,CAAR;AACH;AACJ,CAdD;;AAeA,IAAMY,WAAW,GAAG,SAAdA,WAAc,CAACvF,KAAD,EAAQwF,KAAR,EAAeb,QAAf,EAA4B;AAC5C,MAAMc,UAAU,GAAGzF,KAAK,CAACK,KAAN,CAAYoF,UAA/B,CAD4C,CAE5C;;AACA,MAAMC,iBAAiB,GAAGC,aAAa,CAACC,iBAAd,GAAkCC,qBAAlC,EAA1B;AACA,MAAMC,sBAAsB,GAAGC,KAAK,CAACC,IAAN,CAAWN,iBAAX,EAA8B,UAAAO,IAAI;AAAA,WAAIC,MAAM,CAACD,IAAD,CAAV;AAAA,GAAlC,CAA/B;AACA,MAAME,aAAa,GAAGL,sBAAsB,CAACM,QAAvB,CAAgCX,UAAhC,CAAtB;;AACA,MAAID,KAAK,IAAIW,aAAT,IAA0B,CAACX,KAAK,CAACY,QAAN,CAAeX,UAAf,CAA/B,EAA2D;AACvDd,YAAQ,CAACc,UAAD,CAAR;AACH,GAFD,MAGK;AACDd,YAAQ,CAAC,IAAD,CAAR;AACH;AACJ,CAZD;;AAaA,IAAM0B,YAAY,GAAG,SAAfA,YAAe,CAACtG,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAsB0D,MAAtB,EAA8B2C,IAA9B,EAAoCd,KAApC,EAA2Cb,QAA3C,EAAwD;AACzE,UAAQ3E,KAAK,CAACuG,IAAd;AACI,SAAK,OAAL;AACInB,kBAAY,CAACrF,IAAD,EAAOC,KAAP,EAAc2D,MAAd,EAAsB1D,MAAtB,EAA8B,UAAC2C,KAAD,EAAW;AACjD,YAAIA,KAAJ,EAAW;AACPe,gBAAM,CAACI,IAAP,CAAYnB,KAAZ;AACH;AACJ,OAJW,CAAZ;AAKA;;AACJ,SAAK,OAAL;AACIsC,kBAAY,CAACnF,IAAD,EAAOC,KAAP,EAAc2D,MAAd,EAAsB1D,MAAtB,EAA8B,UAACuG,WAAD,EAAcC,QAAd,EAA2B;AACjE9C,cAAM,CAACI,IAAP,OAAAJ,MAAM,qBAAS6C,WAAT,EAAN;AACAF,YAAI,CAACvC,IAAL,CAAU0C,QAAV;AACH,OAHW,CAAZ;AAIA;;AACJ,SAAK,WAAL;AACI/B,sBAAgB,CAAC3E,IAAD,EAAOC,KAAP,EAAc2D,MAAd,EAAsB1D,MAAtB,EAA8B,UAACyG,eAAD,EAAkBC,YAAlB,EAAmC;AAC7E,YAAIA,YAAJ,EAAkB;AACdL,cAAI,CAACvC,IAAL,CAAU4C,YAAV;AACH;;AACDhD,cAAM,CAACI,IAAP,OAAAJ,MAAM,qBAAS+C,eAAT,EAAN;AACH,OALe,CAAhB;AAMA;;AACJ,SAAK,MAAL;AACInB,iBAAW,CAACvF,KAAD,EAAQwF,KAAR,EAAe,UAACoB,IAAD,EAAU;AAChC,YAAIA,IAAJ,EAAU;AACNpB,eAAK,CAACzB,IAAN,CAAW6C,IAAX;AACH;AACJ,OAJU,CAAX;AAKA;;AACJ,SAAK,OAAL;AACIvB,kBAAY,CAACtF,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAsB,UAAC4G,QAAD,EAAc;AAC5C,YAAIA,QAAJ,EAAc;AACVP,cAAI,CAACvC,IAAL,CAAU8C,QAAV;AACH;AACJ,OAJW,CAAZ;AAKA;AAnCR;;AAqCAlC,UAAQ,CAAC;AACLhB,UAAM,EAANA,MADK;AAEL2C,QAAI,EAAJA,IAFK;AAGLd,SAAK,EAALA;AAHK,GAAD,CAAR;AAKH,CA3CD;;AA4CA,IAAMsB,aAAa,GAAG,SAAhBA,aAAgB,CAAC/G,IAAD,EAAOgF,MAAP,EAAe9E,MAAf,EAA8D;AAAA,MAAvC0D,MAAuC,uEAA9B,EAA8B;AAAA,MAA1B2C,IAA0B,uEAAnB,EAAmB;AAAA,MAAfd,KAAe,uEAAP,EAAO;;AAChF,MAAIT,MAAM,CAACvC,MAAP,GAAgB,CAApB,EAAuB;AACnBuC,UAAM,CAACrE,OAAP,CAAe,UAACV,KAAD,EAAW;AACtBqG,kBAAY,CAACtG,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAsB0D,MAAtB,EAA8B2C,IAA9B,EAAoCd,KAApC,EAA2C,UAACuB,SAAD,EAAe;AAClEpD,cAAM,GAAGoD,SAAS,CAACpD,MAAnB;AACA2C,YAAI,GAAGS,SAAS,CAACT,IAAjB;AACAd,aAAK,GAAGuB,SAAS,CAACvB,KAAlB;AACH,OAJW,CAAZ;;AAKA,UAAIxF,KAAK,CAACuG,IAAN,KAAe,OAAnB,EAA4B;AACxBO,qBAAa,CAAC/G,IAAD,EAAOC,KAAK,CAAC+E,MAAb,EAAqB9E,MAArB,EAA6B0D,MAA7B,EAAqC2C,IAArC,EAA2Cd,KAA3C,CAAb;AACH;AACJ,KATD;AAUH;;AACD,SAAO;AACH7B,UAAM,EAANA,MADG;AAEH2C,QAAI,EAAJA,IAFG;AAGHd,SAAK,EAALA;AAHG,GAAP;AAKH,CAlBD;;AAmBO,IAAMwB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,QAAD,EAAWhH,MAAX,EAAsB;AACrD,MAAMiH,MAAM,GAAGjH,MAAM,UAAN,CAAcgH,QAAd;AACXtE,UAAM,EAAE,MADG;AAEXvB,WAAO,EAAE,KAFE;AAGXC,UAAM,EAAE;AAHG,KAIV,cAJU,EAIO,IAJP,EAAf,CADqD,CAOrD;;AACA,MAAM8F,SAAS,GAAG,IAAIlH,MAAM,CAACwD,KAAX,CAAiB;AAC/Bb,SAAK,EAAEsE;AADwB,GAAjB,CAAlB;AAGA,MAAME,MAAM,GAAGD,SAAS,CAACvE,KAAV,CAAgByE,MAAhB,CAAuBC,8BAAvB,CAAsD,CAAtD,CAAf;AACA,0CAAiCF,MAAjC;AACH,CAbM;AAcA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACxH,IAAD,EAAOkH,QAAP,EAAiBhH,MAAjB,EAA4B;AACjD,MAAMuH,cAAc,GAAGV,aAAa,CAAC/G,IAAD,EAAOkH,QAAQ,CAAClC,MAAhB,EAAwB9E,MAAxB,CAApC;AACA,MAAMwH,aAAa,GAAGT,mBAAmB,CAACC,QAAD,EAAWhH,MAAX,CAAzC;AACA,SAAOyH,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,cAAlB,CAAd,EAAiD;AAAEC,iBAAa,EAAbA;AAAF,GAAjD,CAAP;AACH,CAJM;AAKQF,wEAAf,E","file":"resources_store_assets.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./resources/store/assets.js\");\n","const createSvgFromLayer = (page, layer, sketch, id) => {\n    let borderSize = 0;\n    const activeBorders = layer.style.borders.filter((border) => border.enabled);\n    if (activeBorders) {\n        activeBorders.forEach((border) => {\n            if (border.thickness > borderSize) {\n                borderSize = border.thickness;\n            }\n        });\n    }\n    // duplicate layer\n    const layerDuplicate = layer.duplicate();\n    // set parent to page\n    layerDuplicate.parent = page;\n    // opacity and transforms will be applied on the div, not svg\n    layerDuplicate.style.opacity = 1;\n    layerDuplicate.transform.rotation = 0;\n    layerDuplicate.transform.flippedHorizontally = false;\n    layerDuplicate.transform.flippedVertically = false;\n    // export duplicate layer\n    sketch.export(layerDuplicate, {\n        formats: 'svg',\n        // @ts-ignore\n        output: NSTemporaryDirectory(),\n        ['use-id-for-name']: true,\n        overwriting: true\n    });\n    // update layer frame to include bordersize\n    layer.frame.width = Math.round(layer.frame.width + (borderSize * 1.5));\n    layer.frame.height = Math.round(layer.frame.height + (borderSize * 1.5));\n    layer.frame.x = Math.round(layer.frame.x - ((borderSize * 1.5) / 2));\n    layer.frame.y = Math.round(layer.frame.y - ((borderSize * 1.5) / 2));\n    // remove duplicate layer\n    layerDuplicate.remove();\n    // return AppAsset\n    return {\n        id: id ? id : layer.id,\n        // @ts-ignore\n        src: `${NSTemporaryDirectory()}${layerDuplicate.id}.svg`\n    };\n};\nconst createShapeFromLayer = (layer, sketch, name) => {\n    // create new shape\n    const shapeReplacement = new sketch.Shape({\n        name: name ? name : layer.name,\n        frame: layer.frame,\n        style: layer.style,\n        transform: {\n            rotation: layer.transform.rotation,\n            flippedHorizontally: layer.transform.flippedHorizontally,\n            flippedVertically: layer.transform.flippedVertically\n        }\n    });\n    // return new shape\n    return shapeReplacement;\n};\nconst createShapeFromGroup = (layer, sketch, prefix) => {\n    // remove prefix from name\n    const newName = layer.name.substr(prefix.length, layer.name.length - prefix.length).trim();\n    // create new shape\n    const shapeReplacement = createShapeFromLayer(layer, sketch, newName);\n    // return new shape\n    return shapeReplacement;\n};\nconst createImageLayerImage = (page, layer, sketch) => {\n    const layerDuplicate = layer.duplicate();\n    // reset asset position on artboard\n    layerDuplicate.parent = page;\n    // export asset to temp folder\n    sketch.export(layerDuplicate, {\n        scales: '1, 2',\n        formats: 'png',\n        // @ts-ignore\n        output: NSTemporaryDirectory(),\n        ['use-id-for-name']: true,\n        ['save-for-web']: true,\n        overwriting: true\n    });\n    // remove asset artboard from page\n    layerDuplicate.remove();\n    // return AppAsset\n    return {\n        id: layer.image.id,\n        src: {\n            // @ts-ignore\n            [`1x`]: `${NSTemporaryDirectory()}${layerDuplicate.id}.png`,\n            // @ts-ignore\n            [`2x`]: `${NSTemporaryDirectory()}${layerDuplicate.id}@2x.png`\n        },\n    };\n};\nconst createGradientFillImage = (page, layer, sketch) => {\n    // get enabled gradients\n    const activeGradients = layer.style.fills.filter((fill) => {\n        return fill.enabled && fill.fillType === 'Gradient';\n    });\n    // get top gradient fill\n    const topGradient = activeGradients[activeGradients.length - 1];\n    // create new layer with gradient\n    const gradientImage = new sketch.ShapePath({\n        parent: page,\n        frame: layer.frame,\n        style: {\n            fills: [topGradient],\n            borders: []\n        }\n    });\n    // export image to temp dir\n    sketch.export(gradientImage, {\n        scales: '1, 2',\n        formats: 'png',\n        // @ts-ignore\n        output: NSTemporaryDirectory(),\n        ['use-id-for-name']: true,\n        ['save-for-web']: true,\n        overwriting: true\n    });\n    // remove image from page\n    gradientImage.remove();\n    // return final image\n    return {\n        id: layer.id,\n        src: {\n            // @ts-ignore\n            [`1x`]: `${NSTemporaryDirectory()}${gradientImage.id}.png`,\n            // @ts-ignore\n            [`2x`]: `${NSTemporaryDirectory()}${gradientImage.id}@2x.png`,\n        }\n    };\n};\nconst createImageFillImage = (page, image, sketch) => {\n    // get image size\n    const width = image.nsimage.size().width;\n    const height = image.nsimage.size().height;\n    // create image from fill image\n    const fillImage = new sketch.Image({\n        image: image,\n        parent: page,\n        frame: { width, height, x: 0, y: 0 }\n    });\n    // export image to temp dir\n    sketch.export(fillImage, {\n        scales: '1, 2',\n        formats: 'png',\n        // @ts-ignore\n        output: NSTemporaryDirectory(),\n        ['use-id-for-name']: true,\n        ['save-for-web']: true,\n        overwriting: true\n    });\n    // remove image from page\n    fillImage.remove();\n    // return final image\n    return {\n        id: image.id,\n        src: {\n            // @ts-ignore\n            [`1x`]: `${NSTemporaryDirectory()}${fillImage.id}.png`,\n            // @ts-ignore\n            [`2x`]: `${NSTemporaryDirectory()}${fillImage.id}@2x.png`\n        }\n    };\n};\nconst processLayerFills = (page, layer, images, sketch, fillImages = []) => {\n    layer.style.fills.forEach((fill) => {\n        if (fill.pattern.image !== null && fill.enabled && !images.find(image => image.id === fill.pattern.image.id)) {\n            const fillImage = createImageFillImage(page, fill.pattern.image, sketch);\n            fillImages.push(fillImage);\n        }\n        else if (fill.fillType === 'Gradient' && fill.enabled) {\n            const gradientImage = createGradientFillImage(page, layer, sketch);\n            fillImages.push(gradientImage);\n        }\n    });\n    return fillImages;\n};\nconst isComplexShapePath = (layer) => {\n    const hasOpenPath = !layer.closed;\n    const notRectangle = layer.shapeType !== 'Rectangle';\n    const notOval = layer.shapeType !== 'Oval';\n    const isOddShape = notRectangle && notOval;\n    const hasDashPattern = layer.style.borderOptions.dashPattern.length > 0;\n    return hasOpenPath || isOddShape || hasDashPattern;\n};\nconst processShapePath = (page, layer, images, sketch, callback) => {\n    const isComplex = isComplexShapePath(layer);\n    const shapePathFillImages = processLayerFills(page, layer, images, sketch);\n    if (isComplex) {\n        // turn complex shapePaths into shapes\n        // makes things easier when divs are styled later\n        const shapeReplacement = createShapeFromLayer(layer, sketch);\n        const svg = createSvgFromLayer(page, layer, sketch, shapeReplacement.id);\n        layer.parent.layers.splice(layer.index, 1, shapeReplacement);\n        callback(shapePathFillImages, svg);\n    }\n    else {\n        callback(shapePathFillImages, null);\n    }\n};\nconst processShape = (page, layer, images, sketch, callback) => {\n    const shapeFillImages = processLayerFills(page, layer, images, sketch);\n    const svg = createSvgFromLayer(page, layer, sketch);\n    callback(shapeFillImages, svg);\n};\nconst processImage = (page, layer, images, sketch, callback) => {\n    if (!images.find(image => image.id === layer.image.id)) {\n        const image = createImageLayerImage(page, layer, sketch);\n        callback(image);\n    }\n    else {\n        callback(null);\n    }\n};\nconst processGroup = (page, layer, sketch, callback) => {\n    if (layer.name.startsWith('[srm.svg]')) {\n        // create shape to replace group\n        const shapeReplacement = createShapeFromGroup(layer, sketch, '[srm.svg]');\n        // create svg from group\n        const svg = createSvgFromLayer(page, layer, sketch, shapeReplacement.id);\n        // splice in shape replacement, splice out old group\n        layer.parent.layers.splice(layer.index, 1, shapeReplacement);\n        // return callback\n        callback(svg);\n    }\n    else {\n        callback(null);\n    }\n};\nconst processText = (layer, fonts, callback) => {\n    const fontFamily = layer.style.fontFamily;\n    //@ts-ignore\n    const availableFamilies = NSFontManager.sharedFontManager().availableFontFamilies();\n    const availableFamiliesArray = Array.from(availableFamilies, item => String(item));\n    const fontAvailable = availableFamiliesArray.includes(fontFamily);\n    if (fonts && fontAvailable && !fonts.includes(fontFamily)) {\n        callback(fontFamily);\n    }\n    else {\n        callback(null);\n    }\n};\nconst processLayer = (page, layer, sketch, images, svgs, fonts, callback) => {\n    switch (layer.type) {\n        case 'Image':\n            processImage(page, layer, images, sketch, (image) => {\n                if (image) {\n                    images.push(image);\n                }\n            });\n            break;\n        case 'Shape':\n            processShape(page, layer, images, sketch, (shapeImages, shapeSvg) => {\n                images.push(...shapeImages);\n                svgs.push(shapeSvg);\n            });\n            break;\n        case 'ShapePath':\n            processShapePath(page, layer, images, sketch, (shapePathImages, shapePathSvg) => {\n                if (shapePathSvg) {\n                    svgs.push(shapePathSvg);\n                }\n                images.push(...shapePathImages);\n            });\n            break;\n        case 'Text':\n            processText(layer, fonts, (font) => {\n                if (font) {\n                    fonts.push(font);\n                }\n            });\n            break;\n        case 'Group':\n            processGroup(page, layer, sketch, (groupSvg) => {\n                if (groupSvg) {\n                    svgs.push(groupSvg);\n                }\n            });\n            break;\n    }\n    callback({\n        images,\n        svgs,\n        fonts\n    });\n};\nconst processLayers = (page, layers, sketch, images = [], svgs = [], fonts = []) => {\n    if (layers.length > 0) {\n        layers.forEach((layer) => {\n            processLayer(page, layer, sketch, images, svgs, fonts, (newAssets) => {\n                images = newAssets.images;\n                svgs = newAssets.svgs;\n                fonts = newAssets.fonts;\n            });\n            if (layer.type === 'Group') {\n                processLayers(page, layer.layers, sketch, images, svgs, fonts);\n            }\n        });\n    }\n    return {\n        images,\n        svgs,\n        fonts\n    };\n};\nexport const createArtboardImage = (artboard, sketch) => {\n    const buffer = sketch.export(artboard, {\n        scales: '0.10',\n        formats: 'png',\n        output: false,\n        ['save-for-web']: true\n    });\n    // create image from buffer data\n    const bufferImg = new sketch.Image({\n        image: buffer\n    });\n    const base64 = bufferImg.image.nsdata.base64EncodedStringWithOptions(0);\n    return `data:image/png;base64, ${base64}`;\n};\nexport const getAssets = (page, artboard, sketch) => {\n    const artboardAssets = processLayers(page, artboard.layers, sketch);\n    const artboardImage = createArtboardImage(artboard, sketch);\n    return Object.assign(Object.assign({}, artboardAssets), { artboardImage });\n};\nexport default getAssets;\n"],"sourceRoot":""}